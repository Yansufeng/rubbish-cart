// Code generated by goctl. DO NOT EDIT!
// Source: cart.proto

package server

import (
	"context"

	"rubbish-cart/rpc/cart/cart"
	"rubbish-cart/rpc/cart/internal/logic"
	"rubbish-cart/rpc/cart/internal/svc"
)

type CartServer struct {
	svcCtx *svc.ServiceContext
}

func NewCartServer(svcCtx *svc.ServiceContext) *CartServer {
	return &CartServer{
		svcCtx: svcCtx,
	}
}

func (s *CartServer) CartRegister(ctx context.Context, in *cart.CartRegisterReq) (*cart.CartRegisterResp, error) {
	l := logic.NewCartRegisterLogic(ctx, s.svcCtx)
	return l.CartRegister(in)
}

func (s *CartServer) CartUpdate(ctx context.Context, in *cart.CartUpdateReq) (*cart.CartUpdateResp, error) {
	l := logic.NewCartUpdateLogic(ctx, s.svcCtx)
	return l.CartUpdate(in)
}

func (s *CartServer) Alarm(ctx context.Context, in *cart.AlarmReq) (*cart.AlarmResp, error) {
	l := logic.NewAlarmLogic(ctx, s.svcCtx)
	return l.Alarm(in)
}

func (s *CartServer) GetInfo(ctx context.Context, in *cart.Empty) (*cart.GetInfoResp, error) {
	l := logic.NewGetInfoLogic(ctx, s.svcCtx)
	return l.GetInfo(in)
}
