// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GetOpenIdReq struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOpenIdReq) Reset()         { *m = GetOpenIdReq{} }
func (m *GetOpenIdReq) String() string { return proto.CompactTextString(m) }
func (*GetOpenIdReq) ProtoMessage()    {}
func (*GetOpenIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *GetOpenIdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOpenIdReq.Unmarshal(m, b)
}
func (m *GetOpenIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOpenIdReq.Marshal(b, m, deterministic)
}
func (m *GetOpenIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOpenIdReq.Merge(m, src)
}
func (m *GetOpenIdReq) XXX_Size() int {
	return xxx_messageInfo_GetOpenIdReq.Size(m)
}
func (m *GetOpenIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOpenIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetOpenIdReq proto.InternalMessageInfo

func (m *GetOpenIdReq) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type GetOpenIdResp struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOpenIdResp) Reset()         { *m = GetOpenIdResp{} }
func (m *GetOpenIdResp) String() string { return proto.CompactTextString(m) }
func (*GetOpenIdResp) ProtoMessage()    {}
func (*GetOpenIdResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *GetOpenIdResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOpenIdResp.Unmarshal(m, b)
}
func (m *GetOpenIdResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOpenIdResp.Marshal(b, m, deterministic)
}
func (m *GetOpenIdResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOpenIdResp.Merge(m, src)
}
func (m *GetOpenIdResp) XXX_Size() int {
	return xxx_messageInfo_GetOpenIdResp.Size(m)
}
func (m *GetOpenIdResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOpenIdResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetOpenIdResp proto.InternalMessageInfo

func (m *GetOpenIdResp) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

type GetPurviewReq struct {
	Openid               string   `protobuf:"bytes,1,opt,name=Openid,proto3" json:"Openid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPurviewReq) Reset()         { *m = GetPurviewReq{} }
func (m *GetPurviewReq) String() string { return proto.CompactTextString(m) }
func (*GetPurviewReq) ProtoMessage()    {}
func (*GetPurviewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *GetPurviewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPurviewReq.Unmarshal(m, b)
}
func (m *GetPurviewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPurviewReq.Marshal(b, m, deterministic)
}
func (m *GetPurviewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPurviewReq.Merge(m, src)
}
func (m *GetPurviewReq) XXX_Size() int {
	return xxx_messageInfo_GetPurviewReq.Size(m)
}
func (m *GetPurviewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPurviewReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetPurviewReq proto.InternalMessageInfo

func (m *GetPurviewReq) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

type GetPurviewResp struct {
	Purview              int64    `protobuf:"varint,1,opt,name=Purview,proto3" json:"Purview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPurviewResp) Reset()         { *m = GetPurviewResp{} }
func (m *GetPurviewResp) String() string { return proto.CompactTextString(m) }
func (*GetPurviewResp) ProtoMessage()    {}
func (*GetPurviewResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *GetPurviewResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPurviewResp.Unmarshal(m, b)
}
func (m *GetPurviewResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPurviewResp.Marshal(b, m, deterministic)
}
func (m *GetPurviewResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPurviewResp.Merge(m, src)
}
func (m *GetPurviewResp) XXX_Size() int {
	return xxx_messageInfo_GetPurviewResp.Size(m)
}
func (m *GetPurviewResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPurviewResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetPurviewResp proto.InternalMessageInfo

func (m *GetPurviewResp) GetPurview() int64 {
	if m != nil {
		return m.Purview
	}
	return 0
}

type GetRegisterReq struct {
	Openid               string   `protobuf:"bytes,1,opt,name=Openid,proto3" json:"Openid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegisterReq) Reset()         { *m = GetRegisterReq{} }
func (m *GetRegisterReq) String() string { return proto.CompactTextString(m) }
func (*GetRegisterReq) ProtoMessage()    {}
func (*GetRegisterReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *GetRegisterReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegisterReq.Unmarshal(m, b)
}
func (m *GetRegisterReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegisterReq.Marshal(b, m, deterministic)
}
func (m *GetRegisterReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegisterReq.Merge(m, src)
}
func (m *GetRegisterReq) XXX_Size() int {
	return xxx_messageInfo_GetRegisterReq.Size(m)
}
func (m *GetRegisterReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegisterReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegisterReq proto.InternalMessageInfo

func (m *GetRegisterReq) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func (m *GetRegisterReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetRegisterResp struct {
	Purview              int64    `protobuf:"varint,1,opt,name=Purview,proto3" json:"Purview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegisterResp) Reset()         { *m = GetRegisterResp{} }
func (m *GetRegisterResp) String() string { return proto.CompactTextString(m) }
func (*GetRegisterResp) ProtoMessage()    {}
func (*GetRegisterResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *GetRegisterResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegisterResp.Unmarshal(m, b)
}
func (m *GetRegisterResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegisterResp.Marshal(b, m, deterministic)
}
func (m *GetRegisterResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegisterResp.Merge(m, src)
}
func (m *GetRegisterResp) XXX_Size() int {
	return xxx_messageInfo_GetRegisterResp.Size(m)
}
func (m *GetRegisterResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegisterResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegisterResp proto.InternalMessageInfo

func (m *GetRegisterResp) GetPurview() int64 {
	if m != nil {
		return m.Purview
	}
	return 0
}

type UserInfo struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Purview              int64    `protobuf:"varint,3,opt,name=Purview,proto3" json:"Purview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetPurview() int64 {
	if m != nil {
		return m.Purview
	}
	return 0
}

type GetUserListResp struct {
	UserinfoList         []*UserInfo `protobuf:"bytes,1,rep,name=UserinfoList,proto3" json:"UserinfoList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetUserListResp) Reset()         { *m = GetUserListResp{} }
func (m *GetUserListResp) String() string { return proto.CompactTextString(m) }
func (*GetUserListResp) ProtoMessage()    {}
func (*GetUserListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{8}
}

func (m *GetUserListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserListResp.Unmarshal(m, b)
}
func (m *GetUserListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserListResp.Marshal(b, m, deterministic)
}
func (m *GetUserListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserListResp.Merge(m, src)
}
func (m *GetUserListResp) XXX_Size() int {
	return xxx_messageInfo_GetUserListResp.Size(m)
}
func (m *GetUserListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserListResp proto.InternalMessageInfo

func (m *GetUserListResp) GetUserinfoList() []*UserInfo {
	if m != nil {
		return m.UserinfoList
	}
	return nil
}

type UpdateUserInfoReq struct {
	OpenId               string   `protobuf:"bytes,1,opt,name=OpenId,proto3" json:"OpenId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Purview              int64    `protobuf:"varint,3,opt,name=Purview,proto3" json:"Purview,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserInfoReq) Reset()         { *m = UpdateUserInfoReq{} }
func (m *UpdateUserInfoReq) String() string { return proto.CompactTextString(m) }
func (*UpdateUserInfoReq) ProtoMessage()    {}
func (*UpdateUserInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{9}
}

func (m *UpdateUserInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserInfoReq.Unmarshal(m, b)
}
func (m *UpdateUserInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserInfoReq.Marshal(b, m, deterministic)
}
func (m *UpdateUserInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserInfoReq.Merge(m, src)
}
func (m *UpdateUserInfoReq) XXX_Size() int {
	return xxx_messageInfo_UpdateUserInfoReq.Size(m)
}
func (m *UpdateUserInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserInfoReq proto.InternalMessageInfo

func (m *UpdateUserInfoReq) GetOpenId() string {
	if m != nil {
		return m.OpenId
	}
	return ""
}

func (m *UpdateUserInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateUserInfoReq) GetPurview() int64 {
	if m != nil {
		return m.Purview
	}
	return 0
}

type UpdateUserInfoResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateUserInfoResp) Reset()         { *m = UpdateUserInfoResp{} }
func (m *UpdateUserInfoResp) String() string { return proto.CompactTextString(m) }
func (*UpdateUserInfoResp) ProtoMessage()    {}
func (*UpdateUserInfoResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{10}
}

func (m *UpdateUserInfoResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserInfoResp.Unmarshal(m, b)
}
func (m *UpdateUserInfoResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserInfoResp.Marshal(b, m, deterministic)
}
func (m *UpdateUserInfoResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserInfoResp.Merge(m, src)
}
func (m *UpdateUserInfoResp) XXX_Size() int {
	return xxx_messageInfo_UpdateUserInfoResp.Size(m)
}
func (m *UpdateUserInfoResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserInfoResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserInfoResp proto.InternalMessageInfo

func (m *UpdateUserInfoResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Empty)(nil), "user.Empty")
	proto.RegisterType((*GetOpenIdReq)(nil), "user.GetOpenIdReq")
	proto.RegisterType((*GetOpenIdResp)(nil), "user.GetOpenIdResp")
	proto.RegisterType((*GetPurviewReq)(nil), "user.GetPurviewReq")
	proto.RegisterType((*GetPurviewResp)(nil), "user.GetPurviewResp")
	proto.RegisterType((*GetRegisterReq)(nil), "user.GetRegisterReq")
	proto.RegisterType((*GetRegisterResp)(nil), "user.GetRegisterResp")
	proto.RegisterType((*UserInfo)(nil), "user.UserInfo")
	proto.RegisterType((*GetUserListResp)(nil), "user.GetUserListResp")
	proto.RegisterType((*UpdateUserInfoReq)(nil), "user.UpdateUserInfoReq")
	proto.RegisterType((*UpdateUserInfoResp)(nil), "user.UpdateUserInfoResp")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0xc7, 0x69, 0xda, 0xa7, 0x2f, 0xd3, 0x3e, 0x11, 0xc7, 0xb7, 0x90, 0x53, 0x59, 0x04, 0x8b,
	0x42, 0xc1, 0x2a, 0x08, 0xe2, 0xad, 0x14, 0x29, 0x88, 0x2d, 0x81, 0x1e, 0x3c, 0x56, 0xb2, 0x95,
	0xa5, 0xb4, 0x59, 0xb3, 0x5b, 0xc5, 0x8f, 0xe4, 0xb7, 0x94, 0xdd, 0x6c, 0x9b, 0xdd, 0x36, 0xf6,
	0xe2, 0x6d, 0x66, 0xf6, 0x37, 0xff, 0x99, 0xcc, 0x4c, 0x00, 0x56, 0x82, 0xa6, 0x5d, 0x9e, 0x26,
	0x32, 0xc1, 0x8a, 0xb2, 0x49, 0x0d, 0xfe, 0x0d, 0x16, 0x5c, 0x7e, 0x11, 0x02, 0xad, 0x47, 0x2a,
	0x47, 0x9c, 0x2e, 0x87, 0x71, 0x44, 0xdf, 0x11, 0xa1, 0xd2, 0x4f, 0x62, 0x1a, 0x94, 0xda, 0xa5,
	0x4e, 0x23, 0xd2, 0x36, 0xb9, 0x80, 0xff, 0x16, 0x23, 0x38, 0x9e, 0x42, 0x35, 0xf3, 0x0c, 0x66,
	0x3c, 0x03, 0x8e, 0x57, 0xe9, 0x07, 0xa3, 0x9f, 0x4a, 0xcd, 0x80, 0xcc, 0x01, 0x59, 0x4c, 0x2e,
	0xc1, 0xb7, 0x41, 0xc1, 0x31, 0x80, 0x9a, 0x71, 0x35, 0x5a, 0x8e, 0xd6, 0x2e, 0x79, 0xd0, 0x6c,
	0x44, 0xdf, 0x98, 0x90, 0x34, 0xdd, 0xa3, 0xaa, 0x7a, 0x7f, 0x9e, 0x2e, 0x68, 0xe0, 0x65, 0xbd,
	0x2b, 0x9b, 0x5c, 0xc1, 0x81, 0x93, 0xbd, 0xb7, 0xd4, 0x18, 0xea, 0x13, 0x41, 0xd3, 0xe1, 0x72,
	0x96, 0xfc, 0xf6, 0x8d, 0x45, 0x45, 0x6c, 0xc5, 0xb2, 0xab, 0x38, 0xd0, 0xe5, 0x95, 0xe8, 0x13,
	0x13, 0x52, 0x97, 0xef, 0x41, 0x4b, 0xf9, 0x6c, 0x39, 0x4b, 0x54, 0x2c, 0x28, 0xb5, 0xcb, 0x9d,
	0x66, 0xcf, 0xef, 0xea, 0x1d, 0xad, 0xcb, 0x47, 0x0e, 0x43, 0x5e, 0xe0, 0x70, 0xc2, 0xe3, 0xa9,
	0xa4, 0x9b, 0xf7, 0x7c, 0x0c, 0x7f, 0xec, 0xf0, 0x1c, 0x70, 0x5b, 0x5a, 0x70, 0xf4, 0xc1, 0x1b,
	0xcd, 0xb5, 0x6e, 0x3d, 0xf2, 0x46, 0xf3, 0xde, 0xb7, 0x07, 0x15, 0x05, 0xe0, 0x2d, 0x34, 0x36,
	0xb7, 0x80, 0x98, 0x35, 0x6d, 0x1f, 0x50, 0x78, 0xb4, 0x13, 0x13, 0x1c, 0xef, 0x00, 0xf2, 0x7d,
	0x63, 0x8e, 0xe4, 0xa7, 0x12, 0x1e, 0xef, 0x06, 0x05, 0xc7, 0x7b, 0x68, 0x5a, 0xeb, 0xc3, 0x1c,
	0xb2, 0xee, 0x21, 0x3c, 0x29, 0x88, 0x0a, 0x8e, 0xd7, 0x3a, 0x77, 0x3d, 0x7b, 0x6c, 0x66, 0x94,
	0x3e, 0x7b, 0x2b, 0xc5, 0xd9, 0x4d, 0x1f, 0x7c, 0x77, 0x18, 0x78, 0x66, 0xf6, 0xb2, 0x3d, 0xfd,
	0x30, 0x28, 0x7e, 0x10, 0xfc, 0xb5, 0xaa, 0x7f, 0xb4, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x7c, 0x2b, 0x9b, 0x7d, 0x76, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	GetOpenId(ctx context.Context, in *GetOpenIdReq, opts ...grpc.CallOption) (*GetOpenIdResp, error)
	GetPurview(ctx context.Context, in *GetPurviewReq, opts ...grpc.CallOption) (*GetPurviewResp, error)
	GetRegister(ctx context.Context, in *GetRegisterReq, opts ...grpc.CallOption) (*GetRegisterResp, error)
	GetUserList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserListResp, error)
	UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetOpenId(ctx context.Context, in *GetOpenIdReq, opts ...grpc.CallOption) (*GetOpenIdResp, error) {
	out := new(GetOpenIdResp)
	err := c.cc.Invoke(ctx, "/user.User/GetOpenId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetPurview(ctx context.Context, in *GetPurviewReq, opts ...grpc.CallOption) (*GetPurviewResp, error) {
	out := new(GetPurviewResp)
	err := c.cc.Invoke(ctx, "/user.User/GetPurview", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetRegister(ctx context.Context, in *GetRegisterReq, opts ...grpc.CallOption) (*GetRegisterResp, error) {
	out := new(GetRegisterResp)
	err := c.cc.Invoke(ctx, "/user.User/GetRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserList(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserListResp, error) {
	out := new(GetUserListResp)
	err := c.cc.Invoke(ctx, "/user.User/GetUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoReq, opts ...grpc.CallOption) (*UpdateUserInfoResp, error) {
	out := new(UpdateUserInfoResp)
	err := c.cc.Invoke(ctx, "/user.User/UpdateUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	GetOpenId(context.Context, *GetOpenIdReq) (*GetOpenIdResp, error)
	GetPurview(context.Context, *GetPurviewReq) (*GetPurviewResp, error)
	GetRegister(context.Context, *GetRegisterReq) (*GetRegisterResp, error)
	GetUserList(context.Context, *Empty) (*GetUserListResp, error)
	UpdateUserInfo(context.Context, *UpdateUserInfoReq) (*UpdateUserInfoResp, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) GetOpenId(ctx context.Context, req *GetOpenIdReq) (*GetOpenIdResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOpenId not implemented")
}
func (*UnimplementedUserServer) GetPurview(ctx context.Context, req *GetPurviewReq) (*GetPurviewResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPurview not implemented")
}
func (*UnimplementedUserServer) GetRegister(ctx context.Context, req *GetRegisterReq) (*GetRegisterResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRegister not implemented")
}
func (*UnimplementedUserServer) GetUserList(ctx context.Context, req *Empty) (*GetUserListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserList not implemented")
}
func (*UnimplementedUserServer) UpdateUserInfo(ctx context.Context, req *UpdateUserInfoReq) (*UpdateUserInfoResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserInfo not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetOpenId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOpenIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetOpenId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetOpenId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetOpenId(ctx, req.(*GetOpenIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetPurview_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPurviewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetPurview(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetPurview",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetPurview(ctx, req.(*GetPurviewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegisterReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetRegister(ctx, req.(*GetRegisterReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/GetUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserList(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_UpdateUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).UpdateUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.User/UpdateUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).UpdateUserInfo(ctx, req.(*UpdateUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOpenId",
			Handler:    _User_GetOpenId_Handler,
		},
		{
			MethodName: "GetPurview",
			Handler:    _User_GetPurview_Handler,
		},
		{
			MethodName: "GetRegister",
			Handler:    _User_GetRegister_Handler,
		},
		{
			MethodName: "GetUserList",
			Handler:    _User_GetUserList_Handler,
		},
		{
			MethodName: "UpdateUserInfo",
			Handler:    _User_UpdateUserInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
