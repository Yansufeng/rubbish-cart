// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rubbish.proto

package rubbish

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RubbishInfo struct {
	CartId               int64    `protobuf:"varint,1,opt,name=CartId,proto3" json:"CartId,omitempty"`
	TypeId               int64    `protobuf:"varint,2,opt,name=TypeId,proto3" json:"TypeId,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Num                  int64    `protobuf:"varint,4,opt,name=Num,proto3" json:"Num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RubbishInfo) Reset()         { *m = RubbishInfo{} }
func (m *RubbishInfo) String() string { return proto.CompactTextString(m) }
func (*RubbishInfo) ProtoMessage()    {}
func (*RubbishInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{0}
}

func (m *RubbishInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RubbishInfo.Unmarshal(m, b)
}
func (m *RubbishInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RubbishInfo.Marshal(b, m, deterministic)
}
func (m *RubbishInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RubbishInfo.Merge(m, src)
}
func (m *RubbishInfo) XXX_Size() int {
	return xxx_messageInfo_RubbishInfo.Size(m)
}
func (m *RubbishInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RubbishInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RubbishInfo proto.InternalMessageInfo

func (m *RubbishInfo) GetCartId() int64 {
	if m != nil {
		return m.CartId
	}
	return 0
}

func (m *RubbishInfo) GetTypeId() int64 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *RubbishInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RubbishInfo) GetNum() int64 {
	if m != nil {
		return m.Num
	}
	return 0
}

type GetCartRubbishListReq struct {
	CartId               int64    `protobuf:"varint,1,opt,name=CartId,proto3" json:"CartId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCartRubbishListReq) Reset()         { *m = GetCartRubbishListReq{} }
func (m *GetCartRubbishListReq) String() string { return proto.CompactTextString(m) }
func (*GetCartRubbishListReq) ProtoMessage()    {}
func (*GetCartRubbishListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{1}
}

func (m *GetCartRubbishListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCartRubbishListReq.Unmarshal(m, b)
}
func (m *GetCartRubbishListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCartRubbishListReq.Marshal(b, m, deterministic)
}
func (m *GetCartRubbishListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCartRubbishListReq.Merge(m, src)
}
func (m *GetCartRubbishListReq) XXX_Size() int {
	return xxx_messageInfo_GetCartRubbishListReq.Size(m)
}
func (m *GetCartRubbishListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCartRubbishListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCartRubbishListReq proto.InternalMessageInfo

func (m *GetCartRubbishListReq) GetCartId() int64 {
	if m != nil {
		return m.CartId
	}
	return 0
}

type GetCartRubbishListResp struct {
	RubbishList          []*RubbishInfo `protobuf:"bytes,1,rep,name=RubbishList,proto3" json:"RubbishList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetCartRubbishListResp) Reset()         { *m = GetCartRubbishListResp{} }
func (m *GetCartRubbishListResp) String() string { return proto.CompactTextString(m) }
func (*GetCartRubbishListResp) ProtoMessage()    {}
func (*GetCartRubbishListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{2}
}

func (m *GetCartRubbishListResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCartRubbishListResp.Unmarshal(m, b)
}
func (m *GetCartRubbishListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCartRubbishListResp.Marshal(b, m, deterministic)
}
func (m *GetCartRubbishListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCartRubbishListResp.Merge(m, src)
}
func (m *GetCartRubbishListResp) XXX_Size() int {
	return xxx_messageInfo_GetCartRubbishListResp.Size(m)
}
func (m *GetCartRubbishListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCartRubbishListResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetCartRubbishListResp proto.InternalMessageInfo

func (m *GetCartRubbishListResp) GetRubbishList() []*RubbishInfo {
	if m != nil {
		return m.RubbishList
	}
	return nil
}

type AddRubbishTypeReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRubbishTypeReq) Reset()         { *m = AddRubbishTypeReq{} }
func (m *AddRubbishTypeReq) String() string { return proto.CompactTextString(m) }
func (*AddRubbishTypeReq) ProtoMessage()    {}
func (*AddRubbishTypeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{3}
}

func (m *AddRubbishTypeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRubbishTypeReq.Unmarshal(m, b)
}
func (m *AddRubbishTypeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRubbishTypeReq.Marshal(b, m, deterministic)
}
func (m *AddRubbishTypeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRubbishTypeReq.Merge(m, src)
}
func (m *AddRubbishTypeReq) XXX_Size() int {
	return xxx_messageInfo_AddRubbishTypeReq.Size(m)
}
func (m *AddRubbishTypeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRubbishTypeReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddRubbishTypeReq proto.InternalMessageInfo

func (m *AddRubbishTypeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type AddRubbishTypeResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRubbishTypeResp) Reset()         { *m = AddRubbishTypeResp{} }
func (m *AddRubbishTypeResp) String() string { return proto.CompactTextString(m) }
func (*AddRubbishTypeResp) ProtoMessage()    {}
func (*AddRubbishTypeResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{4}
}

func (m *AddRubbishTypeResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRubbishTypeResp.Unmarshal(m, b)
}
func (m *AddRubbishTypeResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRubbishTypeResp.Marshal(b, m, deterministic)
}
func (m *AddRubbishTypeResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRubbishTypeResp.Merge(m, src)
}
func (m *AddRubbishTypeResp) XXX_Size() int {
	return xxx_messageInfo_AddRubbishTypeResp.Size(m)
}
func (m *AddRubbishTypeResp) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRubbishTypeResp.DiscardUnknown(m)
}

var xxx_messageInfo_AddRubbishTypeResp proto.InternalMessageInfo

func (m *AddRubbishTypeResp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type UpdateCartRubbishReq struct {
	CartId               int64        `protobuf:"varint,1,opt,name=CartId,proto3" json:"CartId,omitempty"`
	RubbishInfo          *RubbishInfo `protobuf:"bytes,2,opt,name=RubbishInfo,proto3" json:"RubbishInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UpdateCartRubbishReq) Reset()         { *m = UpdateCartRubbishReq{} }
func (m *UpdateCartRubbishReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCartRubbishReq) ProtoMessage()    {}
func (*UpdateCartRubbishReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{5}
}

func (m *UpdateCartRubbishReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCartRubbishReq.Unmarshal(m, b)
}
func (m *UpdateCartRubbishReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCartRubbishReq.Marshal(b, m, deterministic)
}
func (m *UpdateCartRubbishReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCartRubbishReq.Merge(m, src)
}
func (m *UpdateCartRubbishReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCartRubbishReq.Size(m)
}
func (m *UpdateCartRubbishReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCartRubbishReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCartRubbishReq proto.InternalMessageInfo

func (m *UpdateCartRubbishReq) GetCartId() int64 {
	if m != nil {
		return m.CartId
	}
	return 0
}

func (m *UpdateCartRubbishReq) GetRubbishInfo() *RubbishInfo {
	if m != nil {
		return m.RubbishInfo
	}
	return nil
}

type UpdateCartRubbishResp struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=Ok,proto3" json:"Ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCartRubbishResp) Reset()         { *m = UpdateCartRubbishResp{} }
func (m *UpdateCartRubbishResp) String() string { return proto.CompactTextString(m) }
func (*UpdateCartRubbishResp) ProtoMessage()    {}
func (*UpdateCartRubbishResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_3334c571de808b06, []int{6}
}

func (m *UpdateCartRubbishResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCartRubbishResp.Unmarshal(m, b)
}
func (m *UpdateCartRubbishResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCartRubbishResp.Marshal(b, m, deterministic)
}
func (m *UpdateCartRubbishResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCartRubbishResp.Merge(m, src)
}
func (m *UpdateCartRubbishResp) XXX_Size() int {
	return xxx_messageInfo_UpdateCartRubbishResp.Size(m)
}
func (m *UpdateCartRubbishResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCartRubbishResp.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCartRubbishResp proto.InternalMessageInfo

func (m *UpdateCartRubbishResp) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*RubbishInfo)(nil), "rubbish.RubbishInfo")
	proto.RegisterType((*GetCartRubbishListReq)(nil), "rubbish.GetCartRubbishListReq")
	proto.RegisterType((*GetCartRubbishListResp)(nil), "rubbish.GetCartRubbishListResp")
	proto.RegisterType((*AddRubbishTypeReq)(nil), "rubbish.AddRubbishTypeReq")
	proto.RegisterType((*AddRubbishTypeResp)(nil), "rubbish.AddRubbishTypeResp")
	proto.RegisterType((*UpdateCartRubbishReq)(nil), "rubbish.UpdateCartRubbishReq")
	proto.RegisterType((*UpdateCartRubbishResp)(nil), "rubbish.UpdateCartRubbishResp")
}

func init() { proto.RegisterFile("rubbish.proto", fileDescriptor_3334c571de808b06) }

var fileDescriptor_3334c571de808b06 = []byte{
	// 309 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x49, 0x3b, 0x36, 0x3d, 0xc3, 0xe1, 0x0e, 0xdb, 0x28, 0x15, 0xe7, 0x08, 0xc2, 0x7a,
	0x35, 0x61, 0x82, 0xf7, 0xe2, 0x85, 0x14, 0x64, 0x93, 0xe0, 0x1e, 0xa0, 0x35, 0x1d, 0x96, 0x31,
	0x1b, 0x9b, 0xee, 0xc2, 0xa7, 0x57, 0x92, 0xa6, 0xb5, 0xda, 0xae, 0xde, 0x9d, 0xbf, 0xfd, 0x7e,
	0xe7, 0x6b, 0xe0, 0x2c, 0x3d, 0x84, 0x61, 0x2c, 0xdf, 0x16, 0x22, 0x4d, 0xb2, 0x04, 0x7b, 0x26,
	0xa5, 0xaf, 0xd0, 0x67, 0x79, 0xe8, 0xbf, 0x6f, 0x13, 0x9c, 0x40, 0xf7, 0x21, 0x48, 0x33, 0x9f,
	0x3b, 0x64, 0x46, 0x3c, 0x9b, 0x99, 0x4c, 0xd5, 0x5f, 0x3e, 0x45, 0xe4, 0x73, 0xc7, 0xca, 0xeb,
	0x79, 0x86, 0x08, 0x9d, 0x55, 0xb0, 0x8f, 0x1c, 0x7b, 0x46, 0xbc, 0x53, 0xa6, 0x63, 0x3c, 0x07,
	0x7b, 0x75, 0xd8, 0x3b, 0x1d, 0x3d, 0xa8, 0x42, 0x7a, 0x03, 0xe3, 0xc7, 0x28, 0x53, 0x9f, 0x32,
	0x5a, 0x4f, 0xb1, 0xcc, 0x58, 0xf4, 0x71, 0x4c, 0x8e, 0x3e, 0xc3, 0xa4, 0x69, 0x41, 0x0a, 0xbc,
	0x2b, 0x79, 0x55, 0xc9, 0x21, 0x33, 0xdb, 0xeb, 0x2f, 0x47, 0x8b, 0xe2, 0xba, 0xca, 0x2d, 0xac,
	0x3a, 0x48, 0xe7, 0x30, 0xbc, 0xe7, 0xdc, 0x54, 0x14, 0xbc, 0x92, 0x2f, 0xe8, 0xc9, 0x0f, 0x3d,
	0xbd, 0x06, 0xfc, 0x3b, 0x28, 0x05, 0x0e, 0xc0, 0x8a, 0x0b, 0x48, 0x2b, 0xe6, 0x74, 0x0b, 0xa3,
	0x8d, 0xe0, 0x41, 0x16, 0x55, 0x18, 0x5b, 0x0e, 0xaa, 0x60, 0x2b, 0x34, 0x6d, 0xe2, 0x7f, 0xd8,
	0x2a, 0xa1, 0x73, 0x18, 0x37, 0xe8, 0xe4, 0x40, 0xeb, 0x9d, 0x16, 0x39, 0x61, 0xd6, 0x7a, 0xb7,
	0xfc, 0x22, 0xd0, 0x33, 0x7d, 0xdc, 0x00, 0xd6, 0xdd, 0xc3, 0x69, 0xa9, 0xd6, 0xf8, 0x2f, 0xdc,
	0xab, 0xd6, 0xbe, 0x14, 0xe8, 0xc3, 0xe0, 0xb7, 0x33, 0xe8, 0x96, 0x2b, 0x35, 0x6f, 0xdd, 0x8b,
	0xa3, 0x3d, 0x29, 0x90, 0xc1, 0xb0, 0x76, 0x16, 0x5e, 0x96, 0x1b, 0x4d, 0xd6, 0xba, 0xd3, 0xb6,
	0xb6, 0x14, 0x61, 0x57, 0xbf, 0xec, 0xdb, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xef, 0x1e,
	0x1b, 0xea, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RubbishClient is the client API for Rubbish service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RubbishClient interface {
	GetCartRubbishList(ctx context.Context, in *GetCartRubbishListReq, opts ...grpc.CallOption) (*GetCartRubbishListResp, error)
	AddRubbishType(ctx context.Context, in *AddRubbishTypeReq, opts ...grpc.CallOption) (*AddRubbishTypeResp, error)
	UpdateCartRubbish(ctx context.Context, in *UpdateCartRubbishReq, opts ...grpc.CallOption) (*UpdateCartRubbishResp, error)
}

type rubbishClient struct {
	cc *grpc.ClientConn
}

func NewRubbishClient(cc *grpc.ClientConn) RubbishClient {
	return &rubbishClient{cc}
}

func (c *rubbishClient) GetCartRubbishList(ctx context.Context, in *GetCartRubbishListReq, opts ...grpc.CallOption) (*GetCartRubbishListResp, error) {
	out := new(GetCartRubbishListResp)
	err := c.cc.Invoke(ctx, "/rubbish.Rubbish/GetCartRubbishList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rubbishClient) AddRubbishType(ctx context.Context, in *AddRubbishTypeReq, opts ...grpc.CallOption) (*AddRubbishTypeResp, error) {
	out := new(AddRubbishTypeResp)
	err := c.cc.Invoke(ctx, "/rubbish.Rubbish/AddRubbishType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rubbishClient) UpdateCartRubbish(ctx context.Context, in *UpdateCartRubbishReq, opts ...grpc.CallOption) (*UpdateCartRubbishResp, error) {
	out := new(UpdateCartRubbishResp)
	err := c.cc.Invoke(ctx, "/rubbish.Rubbish/UpdateCartRubbish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RubbishServer is the server API for Rubbish service.
type RubbishServer interface {
	GetCartRubbishList(context.Context, *GetCartRubbishListReq) (*GetCartRubbishListResp, error)
	AddRubbishType(context.Context, *AddRubbishTypeReq) (*AddRubbishTypeResp, error)
	UpdateCartRubbish(context.Context, *UpdateCartRubbishReq) (*UpdateCartRubbishResp, error)
}

// UnimplementedRubbishServer can be embedded to have forward compatible implementations.
type UnimplementedRubbishServer struct {
}

func (*UnimplementedRubbishServer) GetCartRubbishList(ctx context.Context, req *GetCartRubbishListReq) (*GetCartRubbishListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCartRubbishList not implemented")
}
func (*UnimplementedRubbishServer) AddRubbishType(ctx context.Context, req *AddRubbishTypeReq) (*AddRubbishTypeResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRubbishType not implemented")
}
func (*UnimplementedRubbishServer) UpdateCartRubbish(ctx context.Context, req *UpdateCartRubbishReq) (*UpdateCartRubbishResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCartRubbish not implemented")
}

func RegisterRubbishServer(s *grpc.Server, srv RubbishServer) {
	s.RegisterService(&_Rubbish_serviceDesc, srv)
}

func _Rubbish_GetCartRubbishList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCartRubbishListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubbishServer).GetCartRubbishList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rubbish.Rubbish/GetCartRubbishList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubbishServer).GetCartRubbishList(ctx, req.(*GetCartRubbishListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rubbish_AddRubbishType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRubbishTypeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubbishServer).AddRubbishType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rubbish.Rubbish/AddRubbishType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubbishServer).AddRubbishType(ctx, req.(*AddRubbishTypeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Rubbish_UpdateCartRubbish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCartRubbishReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RubbishServer).UpdateCartRubbish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rubbish.Rubbish/UpdateCartRubbish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RubbishServer).UpdateCartRubbish(ctx, req.(*UpdateCartRubbishReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Rubbish_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rubbish.Rubbish",
	HandlerType: (*RubbishServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCartRubbishList",
			Handler:    _Rubbish_GetCartRubbishList_Handler,
		},
		{
			MethodName: "AddRubbishType",
			Handler:    _Rubbish_AddRubbishType_Handler,
		},
		{
			MethodName: "UpdateCartRubbish",
			Handler:    _Rubbish_UpdateCartRubbish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rubbish.proto",
}
